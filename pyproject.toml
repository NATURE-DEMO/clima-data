[project]
name = "clima-data"
version = "0.0.1"
description = "Repo for NATURE-DEMO climatic indices"
authors = [{ name = "Mattia Rigotti" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.11,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Core climate data processing
    "xarray>=2024.7.0",
    "xclim>=0.52.2",
    "netcdf4>=1.7.2",
    "h5netcdf>=1.6.1",
    "zarr>=2.18.2",
    # Climate data sources and APIs
    "cdsapi>=0.7.6",
    "c3s-atlas",
    # Geospatial and coordinate transformations
    "pyproj>=3.6.1",
    "cartopy>=0.23.0",
    "geopandas>=1.0.1",
    "contextily>=1.6.2",
    # Visualization
    "matplotlib>=3.5.0",
    # Parallel processing
    "dask>=2024.7.1",
    "distributed>=2024.7.1",
]

[project.urls]
Homepage = "https://NATURE-DEMO.github.io/clima-data"
Repository = "https://github.com/NATURE-DEMO/clima-data"
Documentation = "https://NATURE-DEMO.github.io/clima-data"

[dependency-groups]
# Data download and processing tools (optional)
data-tools = [
    "pooch>=1.8.2",
    "compliance-checker>=5.1.1",
]
dev = [
    "pytest>=7.2.0",
    "ipython>=8.18.1",
    "jupyterlab>=4.3.5",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "mypy>=0.991",
    "ruff>=0.9.2",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocs-bibtex>=4.2.5",
    "mkdocstrings[python]>=0.26.1",
    "mkdocs-table-reader-plugin>=3.1.0",
    "pymdown-extensions>=10.15",
    "types-requests>=2.32.4.20250611",
]

[build-system]
requires = ["setuptools < 81.0, >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["clima_data"]

[tool.uv.sources]
c3s-atlas = {git = "https://github.com/ecmwf-projects/c3s-atlas"}

[tool.mypy]
files = [
    "clima_data"
]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

# Ignore missing imports for climate science libraries without type stubs
[[tool.mypy.overrides]]
module = [
    "xclim.*",
    "cartopy.*",
    "cdsapi.*",
    "c3s_atlas.*",
    "contextily.*",
    "flask_cors.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.ruff]
target-version = "py311"
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true
